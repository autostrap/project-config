# HOT template
# 
heat_template_version: 2014-10-16 

description: >
        Setting up a puppetmaster and customer documentation system

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  config_repo:
    type: string
    description: config repo url
  image:
    type: string
    default: Ubuntu 14.04 sys11-cloudimg amd64
    description: Default image to use for servers
  public_net_id:
    type: string
    description: >
      ID of public network for which floating IP addresses will be allocated
  deploy_key:
    type: string
    hidden: true
    description: SSH private key required to access bootstrap repository

resources:

  bootstrap:
    type: sys11::cloudstrap::v4
    properties:
      config_repo: { get_param: config_repo }
      deploy_key: { get_param: deploy_key }

  public_net:
    type: OS::Neutron::Net
    properties: 
      name: public_network 

  mgm_net:
    type: OS::Neutron::Net
    properties: 
      name: management_network 

  mgm_subnet:
    depends_on: public_subnet # we want eth0 to be the public interface
    type: OS::Neutron::Subnet
    properties:
      name: management_subnet
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network_id: {get_resource: mgm_net}
      ip_version: 4
      gateway_ip : 10.0.1.1
      cidr: 10.0.1.0/24
      allocation_pools:
      - {start: 10.0.1.10, end: 10.0.1.240}

  public_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: public_subnet
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network_id: {get_resource: public_net}
      ip_version: 4
      gateway_ip : 192.168.1.1
      cidr: 192.168.1.0/24
      allocation_pools:
      - {start: 192.168.1.10, end: 192.168.1.240}


  ### Puppetmaster node as resource group ###
  #######################
  puppetmaster_group:
    type: OS::Heat::ResourceGroup
    depends_on: mgm_net
    depends_on: [ mgm_subnet ]
    properties:
      count: 1 
      resource_def: 
        type: puppetmaster.yaml
        properties:
          init_script: { get_attr: [bootstrap, script] }
          mgm_net: { get_resource: mgm_net }
          public_net: { get_resource: public_net }
          public_net_id: { get_param: public_net_id }
          key_name: { get_param: key_name }
          image: { get_param: image }
          flavor: m1.tiny

  ### Example nodes as resource group ###
  #######################
  exampleserver_group:
    type: OS::Heat::ResourceGroup
    depends_on: mgm_net
    depends_on: [ mgm_subnet ]
    properties:
      count: 1
      resource_def: 
        type: exampleServer.yaml 
        properties:
          init_script: { get_attr: [bootstrap, script] }
          mgm_net: { get_resource: mgm_net }
          key_name: { get_param: key_name }
          image: { get_param: image }
          flavor: m1.tiny
          
