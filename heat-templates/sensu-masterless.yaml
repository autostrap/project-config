# HOT template
#
# 2015, j.grassler@syseleven.de
# 
# Invocation example: heat stack-create -f sensu-masterless.yaml -P key_name=mykey -P deploy_key="$(cat ~/.ssh/deploykey)" -P config_repo="git@gitlab.syseleven.de:cloudstrap/project-config.git" sensu-masterless
# Use client specific git repository
heat_template_version: 2015-04-30

description: >
  This template deploys a sensu server with a masterless puppet setup, set up
  by Syseleven's Cloudstrap bootstrapping system.
  
parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  image:
    type: string
    default: Ubuntu 14.04 sys11-cloudimg amd64
    description: Name of image to use for servers
  flavor:
    type: string
    default: m1.tiny
    description: Flavor to use for nodes
  public_net_id:
    type: string
    default: dc4d2dfb-f8d2-461c-9f16-636edbf99a0f
    description: ID of public network for which floating IP addresses will be allocated

  # Parameters for sys11::cloudstrap

  deploy_key:
    type: string
    description: SSH private key required to access repositories
    hidden: true

  override_yaml:
    type: string
    description: Top-level overrides for Hiera configuration.
    default: ''

  config_repo:
    description: Git repository containing project specific cloud configuration
    default: https://github.com/syseleven/project-config.git
    type: string

  config_branch:
    description: Git branch to use in project specific config repository
    default: master
    type: string

resources:

  ### Creates a Neutron network and subnet

  network:
    type: sys11::network::v3
    properties:
      router: { get_resource: router}
      name:
        list_join:
          - '_'
          - [ heat, { get_param: 'OS::stack_name' } ]


  # Creates a Neutron router for floating IPs and/or SNAT.

  router:
    type: OS::Neutron::Router
    properties:
      name:
        list_join:
          - '_'
          - [ 'router', 'heat', { get_param: 'OS::stack_name' } ]
      external_gateway_info:
        network: { get_param: public_net_id }


  ### Security group for SSH access from outside 
  #   (Add your own rule for allowing access to Uchiwa from outside or tunnel it
  #    through SSH).

  allow_ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Allow inbound SSH traffic"
      name: allow ssh from anywhere
      rules: 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 22, port_range_max: 22 }
  
  ### Generates a user-data script that runs the Syseleven bootstrapping scripts

  bootstrap:
    type: sys11::cloudstrap::v5
    properties:
      config_repo: { get_param: config_repo }
      config_branch: { get_param: config_branch }
      deploy_key: { get_param: deploy_key }
      override_yaml: { get_param: override_yaml }

  ### Sensu server

  sensu-server:
    type: OS::Nova::Server
    properties:
      name: sensu-server
      config_drive: true
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        - port: { get_attr: [ sensu-server_port, port ] }
      metadata:
        stack_name: { get_param: 'OS::stack_name' }
        floating_ip: { get_attr: [ sensu-server_port, floating_ip_address ] }
        sys11_topics: "base firewall ssh sensu-server puppet-masterless"
        project_classes: true
      user_data: { get_attr: [ bootstrap, script ] }
      user_data_format: RAW

  sensu-server_port:
    type: sys11::floatport::v3
    properties:
      public_net: { get_param: public_net_id }
      internal_net: { get_resource: network }
      security_groups:
        - { get_resource: allow_ssh }
